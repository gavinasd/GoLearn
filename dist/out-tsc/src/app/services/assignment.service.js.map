{"version":3,"file":"assignment.service.js","sourceRoot":"","sources":["../../../app/services/assignment.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport {Observable, BehaviorSubject, Subject} from \"rxjs\";\nimport {environment} from \"../../environments/environment\";\nimport {HttpService} from \"./http.service\";\nimport {ResponseToQuestion, Question, GradeInfo, AssignmentInfo} from \"../models/models\";\nimport {isNestedModuleDeclaration} from \"tslint/lib/language/utils\";\n\n@Injectable()\nexport class AssignmentService {\n\n    public questionList: Observable<any[]>\n    public question: Observable<any>;\n    public currentQuestionId: string;\n    public index: Observable<number> = Observable.from([0]);\n    public changeIndex: Subject<boolean> = new BehaviorSubject<boolean>(false);\n\n    constructor(private httpService: HttpService) {\n    }\n\n    /**\n     * 因为会使用assignmentService来存储一些内容，当assginment退出的时候，需要清理掉这些数据\n     */\n    public reset() {\n        this.questionList = Observable.from([]);\n        this.index = Observable.from([0]);\n        this.changeIndex = new BehaviorSubject<boolean>(false);\n    }\n\n    public getQuestionListByAssignment(assignmentId: string): Observable<Question[]> {\n        let url = environment.getAssignmentDetailUrl;\n        url = url + '/' + this.httpService.getCurrentId() + '/' + assignmentId;\n        let questionListLength = 0;\n        this.changeIndex.next(false);\n        this.questionList = this.httpService.makeGetWithToken(url)\n            .map((resp) => {\n                let list = resp.json().results;\n                questionListLength = list.length;\n                return list;\n            });\n        this.index = this.changeIndex.scan((index: number, sign: boolean) => {\n\n            if (sign && index < questionListLength - 1) {\n                index++;\n            } else if (!sign && index > 0) {\n                index--;\n            }\n            console.log(\"index\", \"change to:\" + index);\n\n            return index;\n        }, 1);\n        this.question = this.index.combineLatest(this.questionList,\n            (index: number, questionList: any[]) => {\n\n                if (questionList.length > 0) {\n                    return questionList[index];\n                }\n            });\n        this.question.subscribe((question: any) => {\n            this.currentQuestionId = question.question._id;\n        });\n        return this.questionList;\n    }\n\n    public addResponseToQuestion(response: ResponseToQuestion): Observable<ResponseToQuestion> {\n        let url = environment.addResponseUrlToQuestionUrl;\n        var body = JSON.stringify({\n            'userId': response.creator,\n            'classId': response.class,\n            'assignmentId': response.assignment,\n            'questionId': response.question,\n            'content': response.content\n        });\n        return this.httpService.makePostWithToken(url, body)\n            .map(resp => resp.json())\n            .catch(HttpService.handleError);\n    }\n\n    public addQuestion(assignmentId: string, question: Question): Observable<Question> {\n        let url = environment.addQuestionUrl;\n        var body = JSON.stringify({\n            assignmentId: assignmentId,\n            question: question\n        });\n\n        console.log(body);\n        return this.httpService.makePostWithToken(url, body)\n            .map(resp => resp.json()).catch(HttpService.handleError);\n    }\n\n    public getAssignmentList(classId: string): Observable<AssignmentInfo[]> {\n        let url = environment.getAssignmentListUrl;\n        let userId = this.httpService.getCurrentId();\n        url = url + '/' + classId + '/' + userId;\n        return this.httpService.makeGetWithToken(url)\n            .map(resp => resp.json().gradeInfo).catch(HttpService.handleError);\n    }\n\n    public getAllAssignmentList(): Observable<any[]> {\n        let url = environment.getAllAssignmentListUrl;\n        let userId = this.httpService.getCurrentId();\n        url = url + '/' + userId;\n        return this.httpService.makeGetWithToken(url)\n            .map(resp => resp.json().assignmentList).catch(HttpService.handleError);\n    }\n\n    public getAssignmentName(assignmentId: string): Observable<string> {\n        let url = environment.getAssignmentByIdUrl;\n        url = url + '/' + assignmentId;\n        console.log(url);\n        return this.httpService.makeGetWithToken(url)\n            .map(resp => resp.json().assignment.assignmentName)\n            .catch(HttpService.handleError);\n    }\n\n    public getAssignmentGradeDetail(assignmentId:string):Observable<any[]>{\n        let url = environment.getAssignmentDetailUrl;\n        url = url + '/' + this.httpService.getCurrentId() + '/' + assignmentId;\n        return this.httpService.makeGetWithToken(url)\n            .map(resp=>resp.json().results)\n            .catch(HttpService.handleError);\n    }\n\n    public addAssignmentToClass(classId:string, assignmentId:string):Observable<any[]>{\n        let url = environment.addAssignmentToClassUrl;\n        var body = JSON.stringify({\n            'userId': this.httpService.getCurrentId(),\n            'classId':classId,\n            'assignmentId':assignmentId\n        });\n        return this.httpService.makePostWithToken(url, body)\n            .map(resp => resp.json())\n            .catch(HttpService.handleError);\n    }\n}\n"]}