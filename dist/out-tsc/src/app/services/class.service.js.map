{"version":3,"file":"class.service.js","sourceRoot":"","sources":["../../../app/services/class.service.ts"],"names":[],"mappings":"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","sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpService} from \"./http.service\";\nimport {Observable} from \"rxjs\";\nimport {environment} from \"../../environments/environment\";\nimport {ClassInfo} from \"../models/models\";\nimport 'rxjs';\nimport {Response} from \"@angular/http\";\n\n@Injectable()\nexport class ClassService {\n\n    constructor(private httpService : HttpService) {\n    }\n\n    public createClass(className:string,verifier:string):Observable<any[]>{\n        let url = environment.createClassUrl;\n        url = url + '/' + this.httpService.getCurrentId();\n        var body = JSON.stringify({\n            name:className,\n            verifier:verifier\n        });\n\n        return this.httpService.makePostWithToken(url,body)\n            .map(resp=>resp.json()).catch(HttpService.handleError);\n\n    }\n\n    public getClassList(userId:string):Observable<any[]>{\n        let url = environment.getClassListUrl;\n        url = url + '/' + userId;\n        return this.httpService.makeGetWithToken(url).map((resp)=>{\n            return resp.json().classes;\n        });\n    }\n\n    public getClassDetail(classId:string):Observable<Response>{\n        let url = environment.getClassDetailUrl;\n        let userId = this.httpService.getCurrentId();\n        url = url +'/'+ classId +'/'+userId;\n        return this.httpService.makeGetWithToken(url);\n    }\n\n    public searchClass(className:string):Observable<any>{\n        let url = environment.searchClassUrl;\n        url = url + '/' + className;\n        return this.httpService.makeGetWithToken(url)\n            .map(resp=>resp.json().classes);\n    }\n\n    public classAddStudent(classId:string, verifyCode:string):Observable<any>{\n        let url = environment.addStudentUrl;\n        var body = JSON.stringify({\n            studentId:this.httpService.getCurrentId(),\n            classId:classId,\n            verifyCode:verifyCode\n        });\n\n        console.log(body);\n        return this.httpService.makePostWithToken(url,body)\n            .map(resp=>resp.json()).catch(HttpService.handleError);\n    }\n\n    public classGetAllUser(classId:string):Observable<any>{\n        let url = environment.getClassAllUserUrl;\n        url = url + '/' + classId + '/' + this.httpService.getCurrentId();\n        return this.httpService.makeGetWithToken(url)\n            .map(resp=>resp.json()).catch(HttpService.handleError);\n\n    }\n}\n"]}