{"version":3,"file":"tpo-reading-question-detail.component.js","sourceRoot":"","sources":["../../../../app/assignment/tpo-reading-question-detail/tpo-reading-question-detail.component.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAC,SAAS,EAAU,KAAK,EAAE,MAAM,EAAE,YAAY,EAA2B,MAAM,eAAe,CAAC;AACvG,OAAO,EAAW,kBAAkB,EAAC,MAAM,qBAAqB,CAAC;AAQjE,IAAa,iCAAiC;IAM7C;QAJA,gBAAW,GAAiB,EAAE,CAAC,CAAU,wBAAwB;QAEvD,oBAAe,GAAwB,IAAI,YAAY,EAAU,CAAC;IAE5D,CAAC;IAEjB,oDAAQ,GAAR;IACA,CAAC;IAEE,uDAAW,GAAX,UAAY,OAAsB;QAAlC,iBAaC;QAZA,aAAa;QACb,IAAI,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CACvC,UAAC,WAAuB,IAAG,OAAA,WAAW,CAAC,UAAU,IAAI,KAAI,CAAC,QAAQ,CAAC,QAAQ,EAAhD,CAAgD,CAAC,CAAC;QAEpF,EAAE,CAAA,CAAC,CAAC,eAAe,CAAC,CAAA,CAAC;YACjB,kCAAkC;YAC5B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;QACxC,CAAC;QACD,IAAI,CAAC,CAAC;YACR,IAAI,CAAC,MAAM,GAAG,eAAe,CAAC,OAAO,CAAC;QACpC,CAAC;QACP,IAAI,CAAC,YAAY,EAAE,CAAC;IAClB,CAAC;IAED,YAAY;IACf,wDAAY,GAAZ;QAAA,iBAaC;QAZG,IAAI,UAAU,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,UAAC,WAAuB;YAC7C,EAAE,CAAA,CAAC,WAAW,CAAC,UAAU,IAAI,KAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAA,CAAC;gBACjD,WAAW,CAAC,OAAO,GAAG,KAAI,CAAC,MAAM,CAAC;gBAClC,UAAU,GAAG,IAAI,CAAC;YACtB,CAAC;QACL,CAAC,CAAC,CAAC;QACH,EAAE,CAAA,CAAC,CAAC,UAAU,CAAC,CAAA,CAAC;YACZ,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;QAChF,CAAC;QAEP,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACxC,CAAC;IAED,yDAAa,GAAb,UAAc,CAAQ;QAClB,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;IACpC,CAAC;IACL,wCAAC;AAAD,CAAC,AA7CD,IA6CC;AA1CS;IAAR,KAAK,EAAE;8BAAU,kBAAkB;mEAAC;AAC3B;IAAT,MAAM,EAAE;8BAAiB,YAAY;0EAAsC;AAJhE,iCAAiC;IAL7C,SAAS,CAAC;QACT,QAAQ,EAAE,iCAAiC;QAC3C,WAAW,EAAE,4CAA4C;QACzD,SAAS,EAAE,CAAC,2CAA2C,CAAC;KACzD,CAAC;;GACW,iCAAiC,CA6C7C;SA7CY,iCAAiC;AA+C9C;IAII,qBAAY,UAAiB,EAAE,OAAc;QACzC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IAC3B,CAAC;IACL,kBAAC;AAAD,CAAC,AARD,IAQC","sourcesContent":["import {Component, OnInit, Input, Output, EventEmitter, OnChanges, SimpleChanges} from '@angular/core';\nimport {Question, TPOReadingQuestion} from \"../../models/models\";\nimport has = Reflect.has;\n\n@Component({\n  selector: 'app-tpo-reading-question-detail',\n  templateUrl: 'tpo-reading-question-detail.component.html',\n  styleUrls: ['tpo-reading-question-detail.component.css']\n})\nexport class TpoReadingQuestionDetailComponent implements OnInit,OnChanges {\n\tanswer:string;\n\tlastContent:LastContent[] = [];          //[questionId,content]列表\n\t@Input() question:TPOReadingQuestion;\n\t@Output() onAnswerChanged:EventEmitter<string> = new EventEmitter<string>();\n\n\tconstructor() { }\n\n\tngOnInit() {\n\t}\n\n    ngOnChanges(changes: SimpleChanges): void {\n\t    //先找到上一次做题的内容\n\t    let thatLastContent = this.lastContent.find(\n\t        (lastContent:LastContent)=>lastContent.questionId == this.question.question);\n\n\t\tif(!thatLastContent){\n\t\t    //内存里面并没有上次作答的内容，那么当前内容就是数据库中保存的内容\n            this.answer = this.question.content;\n        }\n        else {\n\t\t    this.answer = thatLastContent.content;\n        }\n\t\tthis.changeAnswer();\n    }\n\n    //学生的回答发生了改变\n\tchangeAnswer(){\n\t    let hasContent = false;\n        this.lastContent.forEach((lastContent:LastContent)=>{\n            if(lastContent.questionId == this.question.question){\n                lastContent.content = this.answer;\n                hasContent = true;\n            }\n        });\n        if(!hasContent){\n            this.lastContent.push(new LastContent(this.question.question, this.answer));\n        }\n\n\t\tthis.onAnswerChanged.emit(this.answer);\n\t}\n\n\tconvert09ToAz(i:number){\n\t    return String.fromCharCode(65 + i);\n    }\n}\n\nclass LastContent{\n    public questionId:string;\n    public content:string;\n\n    constructor(questionId:string, content:string){\n        this.questionId = questionId;\n        this.content = content;\n    }\n}"]}